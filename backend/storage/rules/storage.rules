rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // =============================================================================
    // HELPER FUNCTIONS
    // =============================================================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Get user role from custom claims
    function getUserRole() {
      return request.auth.token.role;
    }
    
    // Check specific roles
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    function isSpecialist() {
      return isAuthenticated() && getUserRole() == 'specialist';
    }
    
    function isAttendee() {
      return isAuthenticated() && getUserRole() == 'attendee';
    }
    
    function isStakeholder() {
      return isAuthenticated() && getUserRole() == 'stakeholder';
    }
    
    // Check if user can write (admin or specialist)
    function canWrite() {
      return isAdmin() || isSpecialist();
    }
    
    // Validate file size based on user role and file type
    function isValidFileSize() {
      let maxSize = 10 * 1024 * 1024; // 10MB default
      
      if (isAdmin()) {
        maxSize = 500 * 1024 * 1024; // 500MB for admins
      } else if (isSpecialist()) {
        maxSize = 100 * 1024 * 1024; // 100MB for specialists
      }
      
      return request.resource.size <= maxSize && request.resource.size >= 1024; // min 1KB
    }
    
    // Validate large file size for videos
    function isValidVideoFileSize() {
      let maxSize = 50 * 1024 * 1024; // 50MB default for videos
      
      if (isAdmin()) {
        maxSize = 500 * 1024 * 1024; // 500MB for admin videos
      } else if (isSpecialist()) {
        maxSize = 200 * 1024 * 1024; // 200MB for specialist videos
      }
      
      return request.resource.size <= maxSize && request.resource.size >= 1024;
    }
    
    // Check if content type is allowed for images
    function isValidImageType() {
      return resource.contentType.matches('image/(png|jpg|jpeg|gif|webp)');
    }
    
    // Check if content type is allowed for documents
    function isValidDocumentType() {
      return resource.contentType.matches('application/(pdf|msword|vnd.openxmlformats-officedocument.wordprocessingml.document|vnd.ms-powerpoint|vnd.openxmlformats-officedocument.presentationml.presentation)') ||
             resource.contentType.matches('text/(plain|csv)');
    }
    
    // Check if content type is allowed for videos
    function isValidVideoType() {
      return resource.contentType.matches('video/(mp4|avi|mov|wmv|webm)');
    }
    
    // =============================================================================
    // USER PROFILE IMAGES
    // =============================================================================
    
    match /users/{userId}/profile/{imageId} {
      // Users can read and write their own profile images
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      
      // Validate upload
      allow write: if isAuthenticated() 
        && request.auth.uid == userId
        && isValidImageType()
        && isValidFileSize();
      
      // Admins can read all profile images (for moderation)
      allow read: if isAdmin();
    }
    
    // =============================================================================
    // DOCUMENT FILES WITH VERSION CONTROL
    // =============================================================================
    
    // Document structure: /documents/{category}/{documentId}/{version}/{fileName}
    match /documents/{category}/{documentId}/{version}/{fileName} {
      // All authenticated users can read approved documents
      allow read: if isAuthenticated();
      
      // Only specialists and admins can upload documents
      allow write: if canWrite() && 
        ((isValidDocumentType() && isValidFileSize()) ||
         (isValidVideoType() && isValidVideoFileSize()));
      
      // Only document creator or admin can update their documents
      allow update: if canWrite() && 
        ((isValidDocumentType() && isValidFileSize()) ||
         (isValidVideoType() && isValidVideoFileSize()));
      
      // Only admins can delete documents
      allow delete: if isAdmin();
    }
    
    // Document thumbnails: /documents/{category}/{documentId}/thumbnails/{fileName}
    match /documents/{category}/{documentId}/thumbnails/{fileName} {
      allow read: if isAuthenticated();
      allow write: if canWrite() && isValidImageType() && 
        request.resource.size <= 5 * 1024 * 1024; // 5MB for thumbnails
      allow delete: if isAdmin();
    }
    
    // Document previews: /documents/{category}/{documentId}/previews/{fileName}
    match /documents/{category}/{documentId}/previews/{fileName} {
      allow read: if isAuthenticated();
      allow write: if canWrite() && 
        (isValidImageType() || resource.contentType == 'application/pdf') &&
        request.resource.size <= 20 * 1024 * 1024; // 20MB for previews
      allow delete: if isAdmin();
    }
    
    // =============================================================================
    // FORUM POST ATTACHMENTS
    // =============================================================================
    
    match /forum/posts/{postId}/attachments/{fileName} {
      // All authenticated users can read attachments
      allow read: if isAuthenticated();
      
      // Users can upload attachments to their posts
      allow write: if isAuthenticated()
        && (isValidImageType() || isValidDocumentType())
        && isValidFileSize();
      
      // Specialists and admins can delete any attachments
      allow delete: if canWrite() || isAdmin();
    }
    
    // =============================================================================
    // FORUM REPLY ATTACHMENTS
    // =============================================================================
    
    match /forum/replies/{replyId}/attachments/{fileName} {
      // All authenticated users can read attachments
      allow read: if isAuthenticated();
      
      // Users can upload attachments to their replies
      allow write: if isAuthenticated()
        && (isValidImageType() || isValidDocumentType())
        && isValidFileSize();
      
      // Specialists and admins can delete any attachments
      allow delete: if canWrite() || isAdmin();
    }
    
    // =============================================================================
    // IMPACT METRICS ATTACHMENTS
    // =============================================================================
    
    match /impact-metrics/{userId}/submissions/{submissionId}/{fileName} {
      // Users can read their own impact metric attachments
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Users can upload attachments to their own impact metrics
      allow write: if isAuthenticated() 
        && request.auth.uid == userId
        && (isValidImageType() || isValidDocumentType())
        && isValidFileSize();
      
      // Admins and stakeholders can read all submissions (for reporting)
      allow read: if isAdmin() || isStakeholder();
      
      // Only admins can delete impact metric attachments
      allow delete: if isAdmin();
    }
    
    // =============================================================================
    // TEMPORARY UPLOADS
    // =============================================================================
    
    match /temp/{userId}/{uploadId} {
      // Users can manage their own temporary uploads
      allow read, write, delete: if isAuthenticated() && request.auth.uid == userId;
      
      // Validate temporary upload
      allow write: if isAuthenticated() 
        && request.auth.uid == userId
        && (isValidImageType() || isValidDocumentType() || isValidVideoType())
        && isValidLargeFileSize();
    }
    
    // =============================================================================
    // SYSTEM ASSETS
    // =============================================================================
    
    match /system/{assetPath=**} {
      // All authenticated users can read system assets (logos, templates, etc.)
      allow read: if isAuthenticated();
      
      // Only admins can manage system assets
      allow write, delete: if isAdmin();
    }
    
    // =============================================================================
    // EMAIL ATTACHMENTS
    // =============================================================================
    
    match /email/attachments/{templateId}/{fileName} {
      // Only admins can manage email attachments
      allow read, write, delete: if isAdmin();
      
      // Validate email attachments
      allow write: if isAdmin()
        && (isValidImageType() || isValidDocumentType())
        && isValidFileSize();
    }
    
    // =============================================================================
    // BACKUP FILES
    // =============================================================================
    
    match /backups/{backupId}/{fileName} {
      // Only admins can access backup files
      allow read, write, delete: if isAdmin();
    }
    
    // =============================================================================
    // DEFAULT DENY RULE
    // =============================================================================
    
    // Deny access to any other paths not explicitly defined
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}